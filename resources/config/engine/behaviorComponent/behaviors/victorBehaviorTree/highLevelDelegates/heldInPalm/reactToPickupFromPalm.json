{
  "behaviorID": "ReactToPickupFromPalm",
  "behaviorClass" : "DispatcherStrictPriority",
  
  "interruptActiveBehavior": true,
  "actAsSelector": true,
  
  "behaviors": [
    "RelaxedReactToPickupFromPalmInternal",
    "NervousReactToPickupFromPalmInternal"
  ],
  
  "anonymousBehaviors": [
    {
      "behaviorName": "RelaxedReactToPickupFromPalmInternal",
      "behaviorClass" : "AnimGetInLoop",
      
      "getIn"            : "HeldOnPalmPickupRelaxed",
      "loopAnimation"    : "NeutralFace",
      "getOut"           : "NeutralFace",
      
      "shouldCheckEndCondDuringAnim": false,
      "lockTreads"       : false,
      
      "wantsToBeActivatedCondition": {
        "conditionType": "Emotion",
        "emotion": "Trust",
        "min": 0.5
      }
    },
    {
      "behaviorName": "NervousReactToPickupFromPalmInternal",
      "behaviorClass" : "AnimGetInLoop",
      
      "getIn"            : "HeldOnPalmPickupNervous",
      "loopAnimation"    : "NeutralFace",
      "getOut"           : "NeutralFace",
      
      "shouldCheckEndCondDuringAnim": false,
      "lockTreads"       : false
    }
  ],
  
  "wantsToBeActivatedCondition": {
    "conditionType": "Compound",
    "and": [
      {
        // The get-in animation makes the robot initially look "down" at the ground,
        // so this behavior should only activate when the robot is upright in the air.
        // If the robot is tilted when it tries to activate this behavior, the
        // HeldInPalmDispatcher will just cancel itself and control will be delegated
        // back to the WhileInAirDispatcher.
        //
        // Or if for some reason, the robot is able to transition back to OnTreads
        // (not on the charger, however) prior to activating this, we shouldn't activate
        // this behavior, to allow the HeldInPalmDispatcher to delegate to
        // ReactToPutDownFromPalm immediately instead.
        "conditionType": "OffTreadsState",
        "targetState": "InAir"
      },
      {
        "conditionType": "RobotHeldInPalm",
        "shouldBeHeldInPalm": false
      }
    ]
  },
  
  "wantsToCancelSelfCondition": {
    "conditionType": "Compound",
    "or": [
      {
        // If the user just keeps holding the robot in the air, stop the animation
        // loop and let the HeldInPalmDispatcher cancel itself, which in turn will
        // will allow the WhileInAirDispatcher to re-activate.
        "conditionType": "TimerInRange",
        "begin_s": 5.0
      },
      {
        // Check whether the user returned the robot to the palm of their hand, and
        // if so, then just kill the animation loop since the HeldInPalmDispatcher
        // will just cycle back to the HeldInPalmResponses
        "conditionType": "RobotHeldInPalm",
        "shouldBeHeldInPalm": true
      },
      {
        // If the robot is sure that it has been put down on its treads prior to any
        // of the other cancellation conditions above, cancel the behavior to allow the
        // ReactToPutDownFromPalm to be activated by the HeldInPalmDispatcher
        "conditionType": "OffTreadsState",
        "targetState": "OnTreads"
      }
    ]
  }
}
